// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/shadowgame/rpg/modules/protocol/dto/battle/FightRoundDto_PROTO.proto

package com.shadowgame.rpg.modules.protobuf.dto.battle;

public final class FightRoundDtoPROTO {
  private FightRoundDtoPROTO() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface FightRoundDtoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .com.shadowgame.rpg.modules.protocol.dto.battle.FightDto fights = 1;
    /**
     * <code>repeated .com.shadowgame.rpg.modules.protocol.dto.battle.FightDto fights = 1;</code>
     *
     * <pre>
     **
     * 回合战斗列表
     * </pre>
     */
    java.util.List<com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDto> 
        getFightsList();
    /**
     * <code>repeated .com.shadowgame.rpg.modules.protocol.dto.battle.FightDto fights = 1;</code>
     *
     * <pre>
     **
     * 回合战斗列表
     * </pre>
     */
    com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDto getFights(int index);
    /**
     * <code>repeated .com.shadowgame.rpg.modules.protocol.dto.battle.FightDto fights = 1;</code>
     *
     * <pre>
     **
     * 回合战斗列表
     * </pre>
     */
    int getFightsCount();
    /**
     * <code>repeated .com.shadowgame.rpg.modules.protocol.dto.battle.FightDto fights = 1;</code>
     *
     * <pre>
     **
     * 回合战斗列表
     * </pre>
     */
    java.util.List<? extends com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDtoOrBuilder> 
        getFightsOrBuilderList();
    /**
     * <code>repeated .com.shadowgame.rpg.modules.protocol.dto.battle.FightDto fights = 1;</code>
     *
     * <pre>
     **
     * 回合战斗列表
     * </pre>
     */
    com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDtoOrBuilder getFightsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.shadowgame.rpg.modules.protocol.dto.battle.FightRoundDto}
   *
   * <pre>
   **
   * 回合战报
   * @author wcj10051891@gmail.com
   *字段列表:
   * //回合战斗列表
   *java.util.List&lt;com.shadowgame.rpg.modules.protocol.dto.battle.FightDto&gt; fights
   * </pre>
   */
  public static final class FightRoundDto extends
      com.google.protobuf.GeneratedMessage
      implements FightRoundDtoOrBuilder {
    // Use FightRoundDto.newBuilder() to construct.
    private FightRoundDto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FightRoundDto(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FightRoundDto defaultInstance;
    public static FightRoundDto getDefaultInstance() {
      return defaultInstance;
    }

    public FightRoundDto getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FightRoundDto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                fights_ = new java.util.ArrayList<com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDto>();
                mutable_bitField0_ |= 0x00000001;
              }
              fights_.add(input.readMessage(com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDto.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          fights_ = java.util.Collections.unmodifiableList(fights_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.shadowgame.rpg.modules.protobuf.dto.battle.FightRoundDtoPROTO.internal_static_com_shadowgame_rpg_modules_protocol_dto_battle_FightRoundDto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.shadowgame.rpg.modules.protobuf.dto.battle.FightRoundDtoPROTO.internal_static_com_shadowgame_rpg_modules_protocol_dto_battle_FightRoundDto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.shadowgame.rpg.modules.protobuf.dto.battle.FightRoundDtoPROTO.FightRoundDto.class, com.shadowgame.rpg.modules.protobuf.dto.battle.FightRoundDtoPROTO.FightRoundDto.Builder.class);
    }

    public static com.google.protobuf.Parser<FightRoundDto> PARSER =
        new com.google.protobuf.AbstractParser<FightRoundDto>() {
      public FightRoundDto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FightRoundDto(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FightRoundDto> getParserForType() {
      return PARSER;
    }

    // repeated .com.shadowgame.rpg.modules.protocol.dto.battle.FightDto fights = 1;
    public static final int FIGHTS_FIELD_NUMBER = 1;
    private java.util.List<com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDto> fights_;
    /**
     * <code>repeated .com.shadowgame.rpg.modules.protocol.dto.battle.FightDto fights = 1;</code>
     *
     * <pre>
     **
     * 回合战斗列表
     * </pre>
     */
    public java.util.List<com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDto> getFightsList() {
      return fights_;
    }
    /**
     * <code>repeated .com.shadowgame.rpg.modules.protocol.dto.battle.FightDto fights = 1;</code>
     *
     * <pre>
     **
     * 回合战斗列表
     * </pre>
     */
    public java.util.List<? extends com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDtoOrBuilder> 
        getFightsOrBuilderList() {
      return fights_;
    }
    /**
     * <code>repeated .com.shadowgame.rpg.modules.protocol.dto.battle.FightDto fights = 1;</code>
     *
     * <pre>
     **
     * 回合战斗列表
     * </pre>
     */
    public int getFightsCount() {
      return fights_.size();
    }
    /**
     * <code>repeated .com.shadowgame.rpg.modules.protocol.dto.battle.FightDto fights = 1;</code>
     *
     * <pre>
     **
     * 回合战斗列表
     * </pre>
     */
    public com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDto getFights(int index) {
      return fights_.get(index);
    }
    /**
     * <code>repeated .com.shadowgame.rpg.modules.protocol.dto.battle.FightDto fights = 1;</code>
     *
     * <pre>
     **
     * 回合战斗列表
     * </pre>
     */
    public com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDtoOrBuilder getFightsOrBuilder(
        int index) {
      return fights_.get(index);
    }

    private void initFields() {
      fights_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < fights_.size(); i++) {
        output.writeMessage(1, fights_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < fights_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, fights_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.shadowgame.rpg.modules.protobuf.dto.battle.FightRoundDtoPROTO.FightRoundDto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.shadowgame.rpg.modules.protobuf.dto.battle.FightRoundDtoPROTO.FightRoundDto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.shadowgame.rpg.modules.protobuf.dto.battle.FightRoundDtoPROTO.FightRoundDto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.shadowgame.rpg.modules.protobuf.dto.battle.FightRoundDtoPROTO.FightRoundDto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.shadowgame.rpg.modules.protobuf.dto.battle.FightRoundDtoPROTO.FightRoundDto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.shadowgame.rpg.modules.protobuf.dto.battle.FightRoundDtoPROTO.FightRoundDto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.shadowgame.rpg.modules.protobuf.dto.battle.FightRoundDtoPROTO.FightRoundDto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.shadowgame.rpg.modules.protobuf.dto.battle.FightRoundDtoPROTO.FightRoundDto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.shadowgame.rpg.modules.protobuf.dto.battle.FightRoundDtoPROTO.FightRoundDto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.shadowgame.rpg.modules.protobuf.dto.battle.FightRoundDtoPROTO.FightRoundDto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.shadowgame.rpg.modules.protobuf.dto.battle.FightRoundDtoPROTO.FightRoundDto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.shadowgame.rpg.modules.protocol.dto.battle.FightRoundDto}
     *
     * <pre>
     **
     * 回合战报
     * @author wcj10051891@gmail.com
     *字段列表:
     * //回合战斗列表
     *java.util.List&lt;com.shadowgame.rpg.modules.protocol.dto.battle.FightDto&gt; fights
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.shadowgame.rpg.modules.protobuf.dto.battle.FightRoundDtoPROTO.FightRoundDtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.shadowgame.rpg.modules.protobuf.dto.battle.FightRoundDtoPROTO.internal_static_com_shadowgame_rpg_modules_protocol_dto_battle_FightRoundDto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.shadowgame.rpg.modules.protobuf.dto.battle.FightRoundDtoPROTO.internal_static_com_shadowgame_rpg_modules_protocol_dto_battle_FightRoundDto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.shadowgame.rpg.modules.protobuf.dto.battle.FightRoundDtoPROTO.FightRoundDto.class, com.shadowgame.rpg.modules.protobuf.dto.battle.FightRoundDtoPROTO.FightRoundDto.Builder.class);
      }

      // Construct using com.shadowgame.rpg.modules.protobuf.dto.battle.FightRoundDtoPROTO.FightRoundDto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFightsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (fightsBuilder_ == null) {
          fights_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          fightsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.shadowgame.rpg.modules.protobuf.dto.battle.FightRoundDtoPROTO.internal_static_com_shadowgame_rpg_modules_protocol_dto_battle_FightRoundDto_descriptor;
      }

      public com.shadowgame.rpg.modules.protobuf.dto.battle.FightRoundDtoPROTO.FightRoundDto getDefaultInstanceForType() {
        return com.shadowgame.rpg.modules.protobuf.dto.battle.FightRoundDtoPROTO.FightRoundDto.getDefaultInstance();
      }

      public com.shadowgame.rpg.modules.protobuf.dto.battle.FightRoundDtoPROTO.FightRoundDto build() {
        com.shadowgame.rpg.modules.protobuf.dto.battle.FightRoundDtoPROTO.FightRoundDto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.shadowgame.rpg.modules.protobuf.dto.battle.FightRoundDtoPROTO.FightRoundDto buildPartial() {
        com.shadowgame.rpg.modules.protobuf.dto.battle.FightRoundDtoPROTO.FightRoundDto result = new com.shadowgame.rpg.modules.protobuf.dto.battle.FightRoundDtoPROTO.FightRoundDto(this);
        int from_bitField0_ = bitField0_;
        if (fightsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            fights_ = java.util.Collections.unmodifiableList(fights_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.fights_ = fights_;
        } else {
          result.fights_ = fightsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.shadowgame.rpg.modules.protobuf.dto.battle.FightRoundDtoPROTO.FightRoundDto) {
          return mergeFrom((com.shadowgame.rpg.modules.protobuf.dto.battle.FightRoundDtoPROTO.FightRoundDto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.shadowgame.rpg.modules.protobuf.dto.battle.FightRoundDtoPROTO.FightRoundDto other) {
        if (other == com.shadowgame.rpg.modules.protobuf.dto.battle.FightRoundDtoPROTO.FightRoundDto.getDefaultInstance()) return this;
        if (fightsBuilder_ == null) {
          if (!other.fights_.isEmpty()) {
            if (fights_.isEmpty()) {
              fights_ = other.fights_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFightsIsMutable();
              fights_.addAll(other.fights_);
            }
            onChanged();
          }
        } else {
          if (!other.fights_.isEmpty()) {
            if (fightsBuilder_.isEmpty()) {
              fightsBuilder_.dispose();
              fightsBuilder_ = null;
              fights_ = other.fights_;
              bitField0_ = (bitField0_ & ~0x00000001);
              fightsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFightsFieldBuilder() : null;
            } else {
              fightsBuilder_.addAllMessages(other.fights_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.shadowgame.rpg.modules.protobuf.dto.battle.FightRoundDtoPROTO.FightRoundDto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.shadowgame.rpg.modules.protobuf.dto.battle.FightRoundDtoPROTO.FightRoundDto) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .com.shadowgame.rpg.modules.protocol.dto.battle.FightDto fights = 1;
      private java.util.List<com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDto> fights_ =
        java.util.Collections.emptyList();
      private void ensureFightsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          fights_ = new java.util.ArrayList<com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDto>(fights_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDto, com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDto.Builder, com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDtoOrBuilder> fightsBuilder_;

      /**
       * <code>repeated .com.shadowgame.rpg.modules.protocol.dto.battle.FightDto fights = 1;</code>
       *
       * <pre>
       **
       * 回合战斗列表
       * </pre>
       */
      public java.util.List<com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDto> getFightsList() {
        if (fightsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fights_);
        } else {
          return fightsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.shadowgame.rpg.modules.protocol.dto.battle.FightDto fights = 1;</code>
       *
       * <pre>
       **
       * 回合战斗列表
       * </pre>
       */
      public int getFightsCount() {
        if (fightsBuilder_ == null) {
          return fights_.size();
        } else {
          return fightsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.shadowgame.rpg.modules.protocol.dto.battle.FightDto fights = 1;</code>
       *
       * <pre>
       **
       * 回合战斗列表
       * </pre>
       */
      public com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDto getFights(int index) {
        if (fightsBuilder_ == null) {
          return fights_.get(index);
        } else {
          return fightsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.shadowgame.rpg.modules.protocol.dto.battle.FightDto fights = 1;</code>
       *
       * <pre>
       **
       * 回合战斗列表
       * </pre>
       */
      public Builder setFights(
          int index, com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDto value) {
        if (fightsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFightsIsMutable();
          fights_.set(index, value);
          onChanged();
        } else {
          fightsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.shadowgame.rpg.modules.protocol.dto.battle.FightDto fights = 1;</code>
       *
       * <pre>
       **
       * 回合战斗列表
       * </pre>
       */
      public Builder setFights(
          int index, com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDto.Builder builderForValue) {
        if (fightsBuilder_ == null) {
          ensureFightsIsMutable();
          fights_.set(index, builderForValue.build());
          onChanged();
        } else {
          fightsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.shadowgame.rpg.modules.protocol.dto.battle.FightDto fights = 1;</code>
       *
       * <pre>
       **
       * 回合战斗列表
       * </pre>
       */
      public Builder addFights(com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDto value) {
        if (fightsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFightsIsMutable();
          fights_.add(value);
          onChanged();
        } else {
          fightsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.shadowgame.rpg.modules.protocol.dto.battle.FightDto fights = 1;</code>
       *
       * <pre>
       **
       * 回合战斗列表
       * </pre>
       */
      public Builder addFights(
          int index, com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDto value) {
        if (fightsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFightsIsMutable();
          fights_.add(index, value);
          onChanged();
        } else {
          fightsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.shadowgame.rpg.modules.protocol.dto.battle.FightDto fights = 1;</code>
       *
       * <pre>
       **
       * 回合战斗列表
       * </pre>
       */
      public Builder addFights(
          com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDto.Builder builderForValue) {
        if (fightsBuilder_ == null) {
          ensureFightsIsMutable();
          fights_.add(builderForValue.build());
          onChanged();
        } else {
          fightsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.shadowgame.rpg.modules.protocol.dto.battle.FightDto fights = 1;</code>
       *
       * <pre>
       **
       * 回合战斗列表
       * </pre>
       */
      public Builder addFights(
          int index, com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDto.Builder builderForValue) {
        if (fightsBuilder_ == null) {
          ensureFightsIsMutable();
          fights_.add(index, builderForValue.build());
          onChanged();
        } else {
          fightsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.shadowgame.rpg.modules.protocol.dto.battle.FightDto fights = 1;</code>
       *
       * <pre>
       **
       * 回合战斗列表
       * </pre>
       */
      public Builder addAllFights(
          java.lang.Iterable<? extends com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDto> values) {
        if (fightsBuilder_ == null) {
          ensureFightsIsMutable();
          super.addAll(values, fights_);
          onChanged();
        } else {
          fightsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.shadowgame.rpg.modules.protocol.dto.battle.FightDto fights = 1;</code>
       *
       * <pre>
       **
       * 回合战斗列表
       * </pre>
       */
      public Builder clearFights() {
        if (fightsBuilder_ == null) {
          fights_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          fightsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.shadowgame.rpg.modules.protocol.dto.battle.FightDto fights = 1;</code>
       *
       * <pre>
       **
       * 回合战斗列表
       * </pre>
       */
      public Builder removeFights(int index) {
        if (fightsBuilder_ == null) {
          ensureFightsIsMutable();
          fights_.remove(index);
          onChanged();
        } else {
          fightsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.shadowgame.rpg.modules.protocol.dto.battle.FightDto fights = 1;</code>
       *
       * <pre>
       **
       * 回合战斗列表
       * </pre>
       */
      public com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDto.Builder getFightsBuilder(
          int index) {
        return getFightsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.shadowgame.rpg.modules.protocol.dto.battle.FightDto fights = 1;</code>
       *
       * <pre>
       **
       * 回合战斗列表
       * </pre>
       */
      public com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDtoOrBuilder getFightsOrBuilder(
          int index) {
        if (fightsBuilder_ == null) {
          return fights_.get(index);  } else {
          return fightsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.shadowgame.rpg.modules.protocol.dto.battle.FightDto fights = 1;</code>
       *
       * <pre>
       **
       * 回合战斗列表
       * </pre>
       */
      public java.util.List<? extends com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDtoOrBuilder> 
           getFightsOrBuilderList() {
        if (fightsBuilder_ != null) {
          return fightsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fights_);
        }
      }
      /**
       * <code>repeated .com.shadowgame.rpg.modules.protocol.dto.battle.FightDto fights = 1;</code>
       *
       * <pre>
       **
       * 回合战斗列表
       * </pre>
       */
      public com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDto.Builder addFightsBuilder() {
        return getFightsFieldBuilder().addBuilder(
            com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDto.getDefaultInstance());
      }
      /**
       * <code>repeated .com.shadowgame.rpg.modules.protocol.dto.battle.FightDto fights = 1;</code>
       *
       * <pre>
       **
       * 回合战斗列表
       * </pre>
       */
      public com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDto.Builder addFightsBuilder(
          int index) {
        return getFightsFieldBuilder().addBuilder(
            index, com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDto.getDefaultInstance());
      }
      /**
       * <code>repeated .com.shadowgame.rpg.modules.protocol.dto.battle.FightDto fights = 1;</code>
       *
       * <pre>
       **
       * 回合战斗列表
       * </pre>
       */
      public java.util.List<com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDto.Builder> 
           getFightsBuilderList() {
        return getFightsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDto, com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDto.Builder, com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDtoOrBuilder> 
          getFightsFieldBuilder() {
        if (fightsBuilder_ == null) {
          fightsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDto, com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDto.Builder, com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.FightDtoOrBuilder>(
                  fights_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          fights_ = null;
        }
        return fightsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.shadowgame.rpg.modules.protocol.dto.battle.FightRoundDto)
    }

    static {
      defaultInstance = new FightRoundDto(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.shadowgame.rpg.modules.protocol.dto.battle.FightRoundDto)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_shadowgame_rpg_modules_protocol_dto_battle_FightRoundDto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_shadowgame_rpg_modules_protocol_dto_battle_FightRoundDto_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\nHcom/shadowgame/rpg/modules/protocol/dt" +
      "o/battle/FightRoundDto_PROTO.proto\022.com." +
      "shadowgame.rpg.modules.protocol.dto.batt" +
      "le\032Ccom/shadowgame/rpg/modules/protocol/" +
      "dto/battle/FightDto_PROTO.proto\"Y\n\rFight" +
      "RoundDto\022H\n\006fights\030\001 \003(\01328.com.shadowgam" +
      "e.rpg.modules.protocol.dto.battle.FightD" +
      "toB0\n.com.shadowgame.rpg.modules.protobu" +
      "f.dto.battle"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_shadowgame_rpg_modules_protocol_dto_battle_FightRoundDto_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_shadowgame_rpg_modules_protocol_dto_battle_FightRoundDto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_shadowgame_rpg_modules_protocol_dto_battle_FightRoundDto_descriptor,
              new java.lang.String[] { "Fights", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.shadowgame.rpg.modules.protobuf.dto.battle.FightDtoPROTO.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
